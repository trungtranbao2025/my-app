name: Build iOS (Capacitor)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: macos-latest
    env:
      IOS_CERT_P12_BASE64: ${{ secrets.IOS_CERT_P12_BASE64 }}
      IOS_CERT_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
      IOS_MOBILEPROVISION_BASE64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}
      IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web (Vite)
        run: npm run build

      - name: Add iOS platform (Capacitor)
        run: npx cap add ios

      - name: Sync iOS
        run: npx cap sync ios

      - name: Install Cocoapods
        working-directory: ios/App
        run: pod install

      - name: Build iOS (xcodebuild - Debug)
        run: |
          set -e
          xcodebuild -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            build

      - name: Import code signing certificate (if provided)
        if: env.IOS_CERT_P12_BASE64 != ''
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_CERT_PASSWORD }}

      - name: Install Provisioning Profile (if provided)
        if: env.IOS_MOBILEPROVISION_BASE64 != ''
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_MOBILEPROVISION_BASE64" | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Archive iOS (Release, signed if cert provided)
        run: |
          set -e
          xcodebuild -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath build/App.xcarchive \
            DEVELOPMENT_TEAM=$IOS_TEAM_ID \
            PRODUCT_BUNDLE_IDENTIFIER=$IOS_BUNDLE_ID \
            archive

      - name: Create ExportOptions.plist
        run: |
          cat > ExportOptions.plist <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>ad-hoc</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>teamID</key>
            <string>${IOS_TEAM_ID}</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
          </dict>
          </plist>
          EOF

      - name: Export signed IPA (if signing configured)
        if: env.IOS_CERT_P12_BASE64 != ''
        run: |
          set -e
          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build/export

      - name: Upload signed IPA (if exists)
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-signed
          path: build/export/*.ipa
          if-no-files-found: ignore

      - name: Upload unsigned Archive (fallback)
        uses: actions/upload-artifact@v4
        with:
          name: ios-archive
          path: build/App.xcarchive
          if-no-files-found: ignore

      - name: Create GitHub Release and attach artifacts (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/export/*.ipa
            build/App.xcarchive
