name: Build Android (Capacitor)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web (Vite)
        run: npm run build

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Add Android platform (Capacitor)
        shell: bash
        run: |
          if [ ! -d "android" ]; then
            npx cap add android
          else
            echo "android/ already exists, skipping 'cap add android'"
          fi

      - name: Sync Android
        run: npx cap sync android

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Check for signing secrets
        id: secrets
        shell: bash
        run: |
          if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ] && \
             [ -n "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ] && \
             [ -n "${{ secrets.ANDROID_KEY_ALIAS }}" ] && \
             [ -n "${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}" ]; then
            echo "signing_enabled=true" >> $GITHUB_OUTPUT
          else
            echo "signing_enabled=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Android Keystore
        if: steps.secrets.outputs.signing_enabled == 'true'
        shell: bash
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Configure Gradle signing for Release
        if: steps.secrets.outputs.signing_enabled == 'true'
        working-directory: android/app
        shell: bash
        run: |
          cat >> build.gradle <<'EOF'
          def env = System.getenv()
          afterEvaluate {
              def releaseConfig = android.signingConfigs.findByName("release") ?: android.signingConfigs.create("release")
              releaseConfig.storeFile = file(env["ANDROID_SIGNING_STORE_FILE"])
              releaseConfig.storePassword = env["ANDROID_SIGNING_STORE_PASSWORD"]
              releaseConfig.keyAlias = env["ANDROID_SIGNING_KEY_ALIAS"]
              releaseConfig.keyPassword = env["ANDROID_SIGNING_KEY_PASSWORD"]
              android.buildTypes.release.signingConfig = releaseConfig
          }
          EOF

      - name: Build Signed Release AAB
        if: steps.secrets.outputs.signing_enabled == 'true'
        working-directory: android
        shell: bash
        env:
          ANDROID_SIGNING_STORE_FILE: ${{ github.workspace }}/android/app/release.keystore
          ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: ./gradlew bundleRelease

      - name: Upload Signed Release AAB
        if: steps.secrets.outputs.signing_enabled == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab-signed
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: ignore

      - name: Build Signed Release APK
        if: steps.secrets.outputs.signing_enabled == 'true'
        working-directory: android
        shell: bash
        env:
          ANDROID_SIGNING_STORE_FILE: ${{ github.workspace }}/android/app/release.keystore
          ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload Signed Release APK
        if: steps.secrets.outputs.signing_enabled == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk-signed
          path: android/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: ignore

      - name: Create GitHub Release and attach Debug APK (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android/app/build/outputs/apk/debug/app-debug.apk

      - name: Attach signed Release artifacts to GitHub Release (on tag, when signing)
        if: startsWith(github.ref, 'refs/tags/') && steps.secrets.outputs.signing_enabled == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android/app/build/outputs/bundle/release/app-release.aab
            android/app/build/outputs/apk/release/app-release.apk
