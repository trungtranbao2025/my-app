name: Build Android (Capacitor)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web (Vite)
        run: npm run build

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Add Android platform (Capacitor)
        run: npx cap add android

      - name: Sync Android
        run: npx cap sync android

      - name: Build Debug APK
        working-directory: android
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Set signing flag (SIGNING_ENABLED)
        shell: bash
        run: |
          if [ -n "${ANDROID_KEYSTORE_BASE64}" ] && [ -n "${ANDROID_KEYSTORE_PASSWORD}" ] && [ -n "${ANDROID_KEY_ALIAS}" ] && [ -n "${ANDROID_KEY_ALIAS_PASSWORD}" ]; then
            echo "SIGNING_ENABLED=true" >> $GITHUB_ENV
          else
            echo "SIGNING_ENABLED=false" >> $GITHUB_ENV
          fi

      - name: Prepare Android Keystore (if provided)
        if: ${{ env.SIGNING_ENABLED == 'true' }}
        run: |
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/release.keystore

      - name: Configure Gradle signing for Release (if keystore provided)
        if: ${{ env.SIGNING_ENABLED == 'true' }}
        working-directory: android/app
        run: |
          cat >> build.gradle <<'EOF'
          def env = System.getenv()
          afterEvaluate {
              def releaseConfig = android.signingConfigs.findByName("release") ?: android.signingConfigs.create("release")
              releaseConfig.storeFile = file(env["ANDROID_SIGNING_STORE_FILE"])
              releaseConfig.storePassword = env["ANDROID_SIGNING_STORE_PASSWORD"]
              releaseConfig.keyAlias = env["ANDROID_SIGNING_KEY_ALIAS"]
              releaseConfig.keyPassword = env["ANDROID_SIGNING_KEY_PASSWORD"]
              android.buildTypes.release.signingConfig = releaseConfig
          }
          EOF

      - name: Build Signed Release AAB (if keystore provided)
        if: ${{ env.SIGNING_ENABLED == 'true' }}
        working-directory: android
        env:
          ANDROID_SIGNING_STORE_FILE: ${{ github.workspace }}/android/app/release.keystore
          ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: ./gradlew bundleRelease

      - name: Upload Signed Release AAB (if exists)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab-signed
          path: android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: ignore

      - name: Build Signed Release APK (if keystore provided)
        if: ${{ env.SIGNING_ENABLED == 'true' }}
        working-directory: android
        env:
          ANDROID_SIGNING_STORE_FILE: ${{ github.workspace }}/android/app/release.keystore
          ANDROID_SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload Signed Release APK (if exists)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk-signed
          path: android/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: ignore

      - name: Create GitHub Release and attach artifacts (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android/app/build/outputs/bundle/release/app-release.aab
            android/app/build/outputs/apk/release/app-release.apk
            android/app/build/outputs/apk/debug/app-debug.apk
